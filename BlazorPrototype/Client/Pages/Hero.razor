@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if(!Id.HasValue)
{	
	<h3>Create new Super Hero</h3>
}
else
{
	<h3>Edit @hero.HeroName</h3>
}
<h3>Hero</h3>

<EditForm Model="hero" OnSubmit="HandleSubmit">
	<div>
		<label for="firstname">First Name</label>
		<InputText id="firstname" @bind-Value="hero.FirstName" class="form-control"></InputText>
	</div>
	<div>
		<label for="lastname">Last Name</label>
		<InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
	</div>
	<div>
		<label for="heroname">Hero Name</label>
		<InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
	</div>
	<div>
		<label>Comic</label><br />
		<InputSelect @bind-Value="hero.SelectedComicId" class="form-select">
			@foreach (var comic in SuperHeroService.Comics)
			{
				<option value="@comic.Id">@comic.Name</option>
			}
		</InputSelect>
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@btnText</button>
	@if (Id.HasValue)
	{
		<button type="button" class="btn btn-secondary" @onclick="DeleteHero">Delete Hero</button>
	}
</EditForm>

@code {
	[Parameter]
	public int? Id { get; set; }

	string btnText = string.Empty;

	SuperHero hero = new SuperHero { Comic = new Comic() };

	protected override async Task OnInitializedAsync()
	{
		btnText = !Id.HasValue ? "Save New Hero" : "Update Hero";
		await SuperHeroService.GetComics();
	}

	protected override async Task OnParametersSetAsync()
	{
		if (!Id.HasValue)
		{
			// Create a new hero
			hero.Comic = SuperHeroService.Comics[0];
			hero.SelectedComicId = hero.Comic.Id.ToString();
		}
		else
		{
			hero = await SuperHeroService.GetSingleHero(Id.Value);
		}
	}

	async Task HandleSubmit()
	{
		if (!Id.HasValue)
		{
			// Create a new hero
			await SuperHeroService.AddSuperHero(hero);
		}
		else
		{
			// Update exising a new hero
			await SuperHeroService.UpdateSuperHero(hero);
		}
	}

	async Task DeleteHero()
	{
		await SuperHeroService.DeleteSuperHero(Id.Value);
	}
}